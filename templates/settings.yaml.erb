:foreman_url: <%= scope.lookupvar("foreman::foreman_url") %>
:unattended: <%= scope.lookupvar("foreman::unattended") %>
<% unless [nil, :undefined, :undef].include?(scope.lookupvar("foreman::unattended_url")) -%>
:unattended_url: <%= scope.lookupvar("foreman::unattended_url") %>
<% end -%>
:require_ssl: <%= scope.lookupvar("foreman::ssl") %>

# The following values are used for providing default settings during db migrate
:oauth_active: <%= scope.lookupvar("foreman::oauth_active") %>
:oauth_map_users: <%= scope.lookupvar("foreman::oauth_map_users") %>
:oauth_consumer_key: <%= scope.lookupvar("foreman::oauth_consumer_key") %>
:oauth_consumer_secret: <%= scope.lookupvar("foreman::oauth_consumer_secret") %>

<% if scope.lookupvar('foreman::authorize_login_delegation') -%>
# The following values are used for oidc authentication
:authorize_login_delegation: <%= scope.lookupvar("foreman::authorize_login_delegation") %>
:authorize_login_delegation_auth_source_user_autocreate: <%= scope.lookupvar("foreman::authorize_login_delegation_auth_source_user_autocreate") %>
:login_delegation_logout_url: <%= scope.lookupvar("foreman::login_delegation_logout_url") %>
:oidc_jwks_url: <%= scope.lookupvar("foreman::oidc_jwks_url") %>
:oidc_audience: <%= scope.lookupvar("foreman::oidc_audience") %>
:oidc_issuer: <%= scope.lookupvar("foreman::oidc_issuer") %>
:oidc_algorithm: <%= scope.lookupvar("foreman::oidc_algorithm") %>

<% end -%>
# Websockets
:websockets_encrypt: <%= scope.lookupvar("foreman::websockets_encrypt") %>
:websockets_ssl_key: <%= @websockets_ssl_key %>
:websockets_ssl_cert: <%= @websockets_ssl_cert %>

# SSL-settings
:ssl_certificate: <%= scope.lookupvar("foreman::client_ssl_cert") %>
:ssl_ca_file: <%= scope.lookupvar("foreman::client_ssl_ca") %>
:ssl_priv_key: <%= scope.lookupvar("foreman::client_ssl_key") %>

# HSTS setting
:hsts_enabled: <%= scope.lookupvar("foreman::hsts_enabled") %>

# Log settings for the current environment can be adjusted by adding them
# here. For example, if you want to increase the log level.
:logging:
  :level: <%= scope.lookupvar("foreman::logging_level") %>
  :production:
    :type: <%= scope.lookupvar("foreman::logging_type") %>
    :layout: <%= @logging_layout %>

<% unless scope.lookupvar('foreman::cors_domains').empty? -%>
# List of domains allowed for Cross-Origin Resource Sharing
:cors_domains:
<% scope.lookupvar('foreman::cors_domains').each do |domain| -%>
 - '<%= domain %>'
<% end -%>

<% end -%>
<% unless scope.lookupvar('foreman::trusted_proxies').empty? -%>
# List of trusted IPs / networks. Default: IPv4 and IPV6 localhost addresses.
# If overwritten, localhost addresses (127.0.0.1/8, ::1) need to be in trusted_proxies IP list.
# More details: https://api.rubyonrails.org/classes/ActionDispatch/RemoteIp.html
:trusted_proxies:
<% scope.lookupvar('foreman::trusted_proxies').each do |proxy| -%>
 - '<%= proxy %>'
<% end -%>

<% end -%>
# Individual logging types can be toggled on/off here
:loggers:
<% scope.lookupvar("foreman::loggers").each do |logger,enabled| -%>
  :<%= logger %>:
    :enabled: <%= enabled %>
<% end -%>

# Foreman telemetry has three destinations: prometheus, statsd and rails log.
:telemetry:
  # prefix for all metrics
  :prefix: '<%= scope.lookupvar("foreman::telemetry_prefix") %>'
  # prometheus endpoint is at /metrics
  # warning: ruby client library currently does not supprt multi-process web servers
  :prometheus:
    :enabled: <%= scope.lookupvar("foreman::telemetry_prometheus_enabled") %>
  # works with statsd_exporter too, use the rake task to generate config
  :statsd:
    :enabled: <%= scope.lookupvar("foreman::telemetry_statsd_enabled") %>
    # IP and port (do not use DNS)
    :host: '<%= scope.lookupvar("foreman::telemetry_statsd_host") %>'
    # one of 'statsd', 'statsite' or 'datadog'
    :protocol: '<%= scope.lookupvar("foreman::telemetry_statsd_protocol") %>'
  # Rails logs end up in logger named 'telemetry' when enabled
  :logger:
    :enabled: <%= scope.lookupvar("foreman::telemetry_logger_enabled") %>
    # logging level as in Logger::LEVEL
    :level: '<%= scope.lookupvar("foreman::telemetry_logger_level") %>'
<% if scope.lookupvar("foreman::email_sendmail_location") || scope.lookupvar("foreman::email_sendmail_arguments") -%>

# Email settings
<% if scope.lookupvar("foreman::email_sendmail_location") -%>
:sendmail_location: "<%= scope.lookupvar("foreman::email_sendmail_location") %>"
<% end -%>
<% if scope.lookupvar("foreman::email_sendmail_arguments") -%>
:sendmail_arguments: "<%= scope.lookupvar("foreman::email_sendmail_arguments") %>"
<% end -%>
<% end -%>

<% if scope.lookupvar("foreman::dynflow_manage_services") -%>
:dynflow:
  :redis_url: <%= scope.lookupvar("foreman::config::dynflow_redis_url") %>

<% end -%>
:rails_cache_store:
  :type: <%= scope["foreman::rails_cache_store"]["type"] %>
<% if scope["foreman::rails_cache_store"]["type"] == "redis" -%>
  :urls:
<%   @redis_cache_urls.each do |url| -%>
    - <%= url %>
<%   end -%>
  :options:
<%   if scope["foreman::rails_cache_store"].key?("options") -%>
<%     scope["foreman::rails_cache_store"]["options"].each do |option,value| -%>
    :<%= option %>: <%= value %>
<%     end -%>
<%   else -%>
    :compress: true
    :namespace: foreman
<%   end -%>
<% end -%>
<% if scope.lookupvar("foreman::provisioning_ct_location") -%>

:ct_location: "<%= scope.lookupvar("foreman::provisioning_ct_location") %>"
<% end -%>
<% if scope.lookupvar("foreman::provisioning_fcct_location") -%>

:fcct_location: "<%= scope.lookupvar("foreman::provisioning_fcct_location") %>"
<% end -%>
