<% @header = ''
   ERB.new(File.read(File.expand_path("_header.erb",File.dirname(file))), nil, nil, "@header").result(binding) -%>
---
<%= @header %>

:unattended: <%= scope.lookupvar("foreman::unattended") %>
<% unless [nil, :undefined, :undef].include?(scope.lookupvar("foreman::unattended_url")) -%>
:unattended_url: <%= scope.lookupvar("foreman::unattended_url") %>
<% end -%>
:require_ssl: <%= scope.lookupvar("foreman::ssl") %>

# The following values are used for providing default settings during db migrate
:oauth_active: <%= scope.lookupvar("foreman::oauth_active") %>
:oauth_map_users: <%= scope.lookupvar("foreman::oauth_map_users") %>
:oauth_consumer_key: <%= scope.lookupvar("foreman::oauth_consumer_key") %>
:oauth_consumer_secret: <%= scope.lookupvar("foreman::oauth_consumer_secret") %>

# Websockets
:websockets_encrypt: <%= scope.lookupvar("foreman::websockets_encrypt") %>
:websockets_ssl_key: <%= scope.lookupvar("foreman::websockets_ssl_key") %>
:websockets_ssl_cert: <%= scope.lookupvar("foreman::websockets_ssl_cert") %>

# SSL-settings
:ssl_certificate: <%= scope.lookupvar("foreman::client_ssl_cert") %>
:ssl_ca_file: <%= scope.lookupvar("foreman::client_ssl_ca") %>
:ssl_priv_key: <%= scope.lookupvar("foreman::client_ssl_key") %>

# HSTS setting
:hsts_enabled: <%= scope.lookupvar("foreman::hsts_enabled") %>

# Log settings for the current environment can be adjusted by adding them
# here. For example, if you want to increase the log level.
:logging:
  :level: <%= scope.lookupvar("foreman::logging_level") %>
  :production:
    :type: <%= scope.lookupvar("foreman::logging_type") %>
    :layout: <%= scope.lookupvar("foreman::logging_layout") %>

<% unless scope.lookupvar('foreman::cors_domains').empty? -%>
# List of domains allowed for Cross-Origin Resource Sharing
:cors_domains:
<% scope.lookupvar('foreman::cors_domains').each do |domain| -%>
 - '<%= domain %>'
<% end -%>

<% end -%>
# Individual logging types can be toggled on/off here
:loggers:
<% scope.lookupvar("foreman::loggers").each do |logger,enabled| -%>
  :<%= logger %>:
    :enabled: <%= enabled %>
<% end -%>

# Foreman telemetry has three destinations: prometheus, statsd and rails log.
:telemetry:
  # prefix for all metrics
  :prefix: '<%= scope.lookupvar("foreman::telemetry_prefix") %>'
  # prometheus endpoint is at /metrics
  # warning: ruby client library currently does not supprt multi-process web servers
  :prometheus:
    :enabled: <%= scope.lookupvar("foreman::telemetry_prometheus_enabled") %>
  # works with statsd_exporter too, use the rake task to generate config
  :statsd:
    :enabled: <%= scope.lookupvar("foreman::telemetry_statsd_enabled") %>
    # IP and port (do not use DNS)
    :host: '<%= scope.lookupvar("foreman::telemetry_statsd_host") %>'
    # one of 'statsd', 'statsite' or 'datadog'
    :protocol: '<%= scope.lookupvar("foreman::telemetry_statsd_protocol") %>'
  # Rails logs end up in logger named 'telemetry' when enabled
  :logger:
    :enabled: <%= scope.lookupvar("foreman::telemetry_logger_enabled") %>
    # logging level as in Logger::LEVEL
    :level: '<%= scope.lookupvar("foreman::telemetry_logger_level") %>'

:dynflow:
  :pool_size: <%= scope.lookupvar("foreman::dynflow_pool_size") %>
